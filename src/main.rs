use csv::ReaderBuilder;
use std::fs;
use std::io;
use std::process::Command;

fn main() -> Result<(), Box<dyn std::error::Error>> {
    let output_folder = "images";
    let line_numbers: Vec<usize> = [
        1, 30, 62, 81, 86, 123, 127, 139, 146, 153, 168, 199, 219, 234, 244, 265, 269, 284, 289,
        303, 314, 342, 344, 413, 417, 420, 428, 436, 441, 447, 458, 465, 468, 485, 487, 490, 508,
        536, 541, 566, 577, 598, 600, 628, 629, 656, 686, 701, 734, 743, 748, 756, 764, 772, 783,
        841, 870, 898, 912, 937, 948, 953, 975, 977, 980, 1014, 1026, 1066, 1076, 1128, 1140, 1161,
        1166, 1169, 1189, 1196, 1202, 1205, 1228, 1238, 1258, 1261, 1262, 1280, 1284, 1291, 1295,
        1303, 1314, 1352, 1380, 1382, 1421, 1443, 1455, 1460, 1462, 1469, 1487, 1493, 1495, 1501,
        1532, 1589, 1608, 1673, 1676, 1705, 1706, 1707, 1714, 1720, 1737, 1795, 1803, 1817, 1834,
        1835, 1836, 1837, 1885, 1948, 1964, 1965, 1967, 2004, 2006, 2008, 2018, 2023, 2066, 2102, 2134,
        2150, 2155, 2168, 2172, 2182, 2185, 2204, 2234, 2241, 2249, 2250, 2253, 2267, 2275, 2311, 2324,
        2336, 2344, 2345, 2398, 2401, 2419, 2432, 2437, 2448, 2495, 2499, 2513, 2516, 2534, 2540, 2550,
        2559, 2584, 2591, 2607, 2641, 2657, 2673, 2687, 2691, 2735, 2751, 2766, 2788, 2850, 2857, 2859,
        2861, 2885, 2890, 2923, 2929, 2949, 2995, 3046, 3052, 3064, 3089, 3090, 3092, 3099, 3112, 3121,
        3126, 3139, 3169, 3184, 3211, 3219, 3226, 3252, 3274, 3314, 3319, 3320, 3332, 3352, 3353, 3364,
        3370, 3379, 3389, 3445, 3449, 3450, 3460, 3486, 3509, 3518, 3541, 3554, 3560, 3565, 3604, 3624,
        3665, 3671, 3686, 3734, 3764, 3774, 3782, 3825, 3838, 3842, 3849, 3853, 3858, 3884, 3949, 3959,
        3961, 4042, 4097, 4098, 4106, 4151, 4152, 4160, 4172, 4186, 4208, 4244, 4252, 4262, 4281, 4287,
        4297, 4330, 4365, 4460, 4465, 4474, 4511, 4520, 4539, 4554, 4576, 4581, 4607, 4609, 4634, 4654,
        4662, 4663, 4671, 4689, 4691, 4694, 4709, 4731, 4749, 4805, 4818, 4855, 4856, 4863, 4892, 4921,
        4937, 4942, 4956, 4972, 5002, 5038, 5058, 5081, 5123, 5139, 5141, 5142, 5165, 5170, 5181, 5220,
        5222, 5223, 5253, 5259, 5261, 5277, 5280, 5282, 5283, 5288, 5289, 5346, 5362, 5373, 5382, 5404,
        5418, 5423, 5445, 5448, 5453, 5468, 5471, 5477, 5493, 5494, 5504, 5505, 5506, 5517, 5537, 5555,
        5564, 5569, 5582, 5598, 5618, 5631, 5691, 5702, 5720, 5759, 5788, 5818, 5828, 5832, 5835, 5851,
        5853, 5878, 5904, 5916, 5920, 5939, 5943, 5960, 5962, 5975, 5983, 5992, 5998, 6009, 6025, 6030,
        6051, 6061, 6067, 6068, 6105, 6117, 6132, 6142, 6172, 6204, 6205, 6211, 6222, 6224, 6247, 6248,
        6250, 6279, 6315, 6327, 6332, 6337, 6348, 6355, 6356, 6393, 6404, 6406, 6417, 6424, 6439, 6441,
        6467, 6493, 6526, 6561, 6581, 6631, 6634, 6641, 6649, 6663, 6680, 6702, 6711, 6724, 6738, 6775,
        6777, 6784, 6796, 6801, 6806, 6836, 6843, 6873, 6922, 6970, 6981, 6993, 7003, 7041, 7051, 7059,
        7065, 7069, 7110, 7124, 7144, 7199, 7238, 7271, 7281, 7288, 7295, 7309, 7311, 7313, 7320, 7353,
        7367, 7396, 7402, 7413, 7428, 7430, 7435, 7451, 7462, 7474, 7520, 7542, 7550, 7569, 7605, 7612,
        7636, 7647, 7651, 7672, 7729, 7731, 7733, 7740, 7769, 7811, 7817, 7822, 7837, 7840, 7897, 7902,
        7960, 7963, 7969, 8005, 8008, 8023, 8047, 8049, 8090, 8106, 8116, 8125, 8152, 8154, 8155
    ].to_vec();

    fs::create_dir_all(output_folder)?;

    let mut rdr = ReaderBuilder::new().from_path("RAISE_all.csv")?;

    for (idx, result) in rdr.records().enumerate() {
        let line_index = idx + 1;
        if line_numbers.contains(&line_index) {
            let record = result?;
            if let Some(url) = record.get(1) {
                download_image(url, output_folder)?;
            } else {
                eprintln!("Warning: No URL found on line {}", line_index);
            }
        }
    }

    println!("Download complete.");
    Ok(())
}

fn download_image(url: &str, folder: &str) -> io::Result<()> {
    let status = Command::new("wget")
        .arg(url)
        .arg("-P")
        .arg(folder)
        .status()?;

    if !status.success() {
        eprintln!("Failed to download {}", url);
    }
    Ok(())
}
